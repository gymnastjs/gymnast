:root {
  --gutter: 20px;
  --vertical-gutter: var(--gutter);
  --page-margin: 50px;
  --max-width: 1280px;
  --min-width: 400px;
}

.gl-layout-root {
  display: flex;
  width: 100%;
  justify-content: center;
}

.gl-layout-content {
  box-sizing: border-box;
  margin-left: calc(var(--page-margin) - (var(--gutter) / 2));
  margin-right: calc(var(--page-margin) - (var(--gutter) / 2));
  width: calc(var(--max-width) - (var(--page-margin) - (var(--gutter) / 2)) * 2);
  min-width: var(--min-width);
}

.grid {
  box-sizing: border-box;
  display: flex;
  flex-flow: row wrap;
  margin: 0 calc(-1 * var(--gutter) / 2);
}

[class*=col-], .col {
  box-sizing: border-box;
  flex: 0 0 auto;
  padding: 0 calc(var(--gutter) / 2) var(--vertical-gutter);
}

.col {
  flex: 1 1 0%;
}

.grid[class*=col-], .grid.col {
  margin: 0;
  padding: 0;
}

.grid--no-margin {
  margin: 0;
}

.grid--no-margin > [class*=col] {
  padding: 0;
}

.grid--left {
  justify-content: flex-start;
  align-self: flex-start;
  margin-right: auto;
}

.grid--center {
  justify-content: center;
}

.grid--right {
  justify-content: flex-end;
  align-self: flex-end;
  margin-left: auto;
}

.grid--top {
  align-content: flex-start;
  align-items: flex-start;
}

.grid--middle {
  align-content: center;
  align-items: center;
}

.grid--bottom {
  align-content: flex-end;
  align-items: flex-end;
}

.grid--stretch > [class*=col] {
  display: flex;
  flex-wrap: wrap;
}

.grid--stretch > [class*=col] > * {
  flex: 1 0 100%;
}

.grid--no-bottom > [class*=col] {
  padding-bottom: 0;
}

.col--top {
  align-self: flex-start;
}

.col--middle {
  align-self: center;
}

.col--bottom {
  align-self: flex-end;
}

@for $i from 1 to 12 {
  .col-$(i) {
    flex-basis: calc(($i / 12) * 100%);
    max-width: calc(($i / 12) * 100%);
  }
}

@for $i from 0 to 11 {
  .col--offset-$(i) {
    margin-left: calc($i / 12 * 100%);
  }
}
