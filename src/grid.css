@import "./variables";

.grid {
  box-sizing: border-box;
  display: flex;
  flex-flow: row wrap;
  width: 100%;

  &.root {
    padding-left: calc(var(--page-margin) - var(--gutter) / 2);
    padding-right: calc(var(--page-margin) - var(--gutter) / 2);
    margin: auto;
    min-width: var(--min-width);
    max-width: var(--max-width);
  }

  &:not(.col) {
    flex-grow: 1;
  }

  &.leftJustify {
    justify-content: flex-start;
    margin-right: auto;
  }

  &.centerJustify {
    justify-content: center;
    margin-left: auto;
    margin-right: auto;
  }

  &.rightJustify {
    justify-content: flex-end;
    margin-left: auto;
  }

  &.topAlign {
    align-content: flex-start;
    align-items: flex-start;
  }

  &.middleAlign {
    align-content: center;
    align-items: center;
  }

  &.bottomAlign {
    align-content: flex-end;
    align-items: flex-end;
  }

  /*&.stretchAlign > .col {
    display: flex;
    flex-wrap: wrap;
  }

  &.stretchAlign > .col > *, &.stretchAlign > .grid > .col > * {
    flex: 1 0 100%;
  }*/

  &.col-fit {
    flex-basis: 0;
    white-space: nowrap;
  }

  &.col-auto {
    flex: 1 1 0%;
  }
}

@for $i from 1 to 12 {
  .col-$(i) {
    flex-basis: calc(($i / 12) * 100%);
    max-width: calc(($i / 12) * 100%);
  }
}

@for $i from 0 to 11 {
  .colOffset-$(i) {
    margin-left: calc($i / 12 * 100%);
  }
}

/* TODO: is this needed? */
.col {
  &.selfTop {
    align-self: flex-start;
  }

  &.middle {
    align-self: center;
  }

  &.bottom {
    align-self: flex-end;
  }

  &.left {
    text-align: left;
  }

  &.center {
    text-align: center;
  }

  &.right {
    text-align: right;
  }
}
