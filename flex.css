:root {
  --gutter: 20px;
  --min-row-height: var(--gutter);
  --vertical-gutter: var(--gutter);
  --page-margin: 50px;
  --max-width: 1280px;
  --min-width: 400px;
  --columns: 12;
  --small-max-column-width: calc(100vw - var(--page-margin) * 2 - var(--gutter) * (var(--columns) - 1)) / var(--columns);
  --max-column-width: calc((var(--max-width) - var(--page-margin) * 2 - var(--gutter) * (var(--columns) - 1)) / var(--columns));
}

.gl-layout-root {
  display: flex;
  width: 100%;
  justify-content: center;
}

.gl-layout-content {
  box-sizing: border-box;
  margin-left: calc(var(--page-margin) + (var(--gutter) / 2));
  margin-right: var(--page-margin);
  width: calc(var(--max-width) - var(--page-margin) * 2);
  min-width: var(--min-width);
}

[class*=grid] {
  box-sizing: border-box;
  display: flex;
  flex-flow: row wrap;
  margin: 0 calc(-1 * var(--gutter) / 2);
}

[class*=col-],[class^=col] {
  box-sizing: border-box;
  flex: 0 0 auto;
  padding: 0 calc(var(--gutter) / 2) var(--gutter);
}

[class^=col] {
  flex: 1 1 0%;
}

[class^=grid][class*=col-],[class^=grid][class^=col] {
  margin: 0;
  padding: 0
}

.grid--no-margin {
  margin: 0;
}

.grid--no-margin > [class*=col] {
  padding: 0;
}

[class*=grid-][class*=-noWrap] {
  flex-wrap: nowrap;
}

[class*=grid-][class*=-center] {
  justify-content: center;
}

[class*=grid-][class*=-right] {
  justify-content: flex-end;
  align-self: flex-end;
  margin-left: auto;
}

[class*=grid-][class*=-top] {
  align-items: flex-start;
}

[class*=grid-][class*=-middle] {
  align-items: center;
}

[class*=grid-][class*=-bottom] {
  align-items: flex-end;
}

[class*=grid-][class*=-column] {
  flex-direction: column
}

[class*=grid-][class*=-column]>[class*=col-] {
  flex-basis: auto
}

[class*=grid-][class*=-column-reverse] {
  flex-direction: column-reverse
}

[class*=grid-][class*=-spaceBetween] {
  justify-content: space-between
}

[class*=grid-][class*=-spaceAround] {
  justify-content: space-around
}

.grid--stretch > [class*=col] {
  display: flex;
  flex-wrap: wrap;
}

.grid--stretch > [class*=col] > * {
  flex: 1 0 100%;
}

[class*=grid-][class*=-noBottom] > [class*=col] {
  padding-bottom: 0
}

[class*=col-][class*=-top] {
  align-self: flex-start
}

[class*=col-][class*=-middle] {
  align-self: center
}

[class*=col-][class*=-bottom] {
  align-self: flex-end
}

@for $i from 1 to 11 {
  [class*=grid-$(i)] > [class*=col-],[class*=grid-$(i)] > [class^=col] {
    flex-basis: calc((1 / $i) * 100%);
    max-width: calc((1 / $i) * 100%);
  }
}

@for $i from 1 to 12 {
  [class*=grid] > [class*=col-$(i)] {
    flex-basis: calc(($i / 12) * 100%);
    max-width: calc(($i / 12) * 100%);
  }
}

@for $i from 0 to 11 {
  [class*=grid] > [data-push-left*=off-$(i)] {
    margin-left: calc($i / 12 * 100%);
  }

  [class*=grid] > [data-push-right*=off-0] {
    margin-right: calc($i / 12 * 100%);
  }
}
